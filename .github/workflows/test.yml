name: Flora Test Suite

on:
  push:
    branches: [ main, li-dev, anth-branch, bevan-branch, xiaoling ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: flora_test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Install dependencies
      run: pnpm install

    - name: Setup test environment
      env:
        DATABASE_URL: postgresql://test_user:test_password@localhost:5432/flora_test_db
        AUTH0_DOMAIN: test-domain.auth0.com
        AUTH0_CLIENT_SECRET: test-secret
        AUTH0_AUDIENCE: https://flora-api.com
      run: |
        cd apps/backend
        pnpm db:generate
        pnpm db:push
        pnpm db:seed

    - name: Run all backend tests
      env:
        DATABASE_URL: postgresql://test_user:test_password@localhost:5432/flora_test_db
        AUTH0_DOMAIN: test-domain.auth0.com
        AUTH0_CLIENT_SECRET: test-secret
        AUTH0_AUDIENCE: https://flora-api.com
      run: |
        cd apps/backend
        pnpm test -- --coverage --passWithNoTests

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: apps/backend/coverage/lcov.info
        fail_ci_if_error: false

    - name: Test delivery endpoints
      env:
        DATABASE_URL: postgresql://test_user:test_password@localhost:5432/flora_test_db
        AUTH0_DOMAIN: test-domain.auth0.com
        AUTH0_CLIENT_SECRET: test-secret
        AUTH0_AUDIENCE: https://flora-api.com
      run: |
        cd apps/backend
        # Start server in background
        pnpm start &
        sleep 5
        # Test delivery endpoints
        curl -f http://localhost:3001/api/delivery/info
        curl -f http://localhost:3001/api/delivery/validate/3000
        curl -f http://localhost:3001/api/health

  frontend-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Install dependencies
      run: pnpm install

    - name: Build frontend
      run: |
        cd apps/frontend
        pnpm build

    - name: Lint frontend
      run: |
        cd apps/frontend
        pnpm lint || echo "Linting failed, but continuing..."

  type-check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Install dependencies
      run: pnpm install

    - name: Type check backend
      run: |
        cd apps/backend
        pnpm build

    - name: Type check frontend
      run: |
        cd apps/frontend
        pnpm type-check || echo "Type check completed with warnings"